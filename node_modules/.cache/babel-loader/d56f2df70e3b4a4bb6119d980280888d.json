{"ast":null,"code":"var _jsxFileName = \"/Users/velkoskis/Desktop/Claims/src/components/LazyMint.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Input, Card, Divider } from \"antd\";\nimport { AddressInput } from './';\nimport { BufferList } from \"bl\";\nimport { createLazyMint, generateTokenId, putLazyMint } from \"../rarible/createLazyMint\";\nimport { is } from \"@babel/types\";\n\nconst ipfsAPI = require('ipfs-http-client');\n\nconst ipfs = ipfsAPI({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\nexport default function LazyMint(props) {\n  const titleMint = {\n    fontFamily: \"Whyte-Inktrap\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"35px\",\n    lineHeight: \"100%\",\n    letterSpacing: \"-0.02em\",\n    textTransform: \"uppercase\",\n    color: \"#313439\",\n    marginBottom: \"25px\",\n    textAlign: \"center\"\n  };\n  const active = {\n    backgroundColor: \"rgba(73, 70, 230, 1)\",\n    color: \"white!important\"\n  };\n  const createDesc = {\n    fontSize: \"20px\",\n    textTransform: \"uppercase\",\n    fontWeight: \"600\",\n    marginBottom: \"20px\"\n  };\n  const buttonMint = {\n    width: \"429px\",\n    height: \"110px\",\n    textAlign: \"center\",\n    marginTop: \"20px\",\n    fontFamily: \"Grtsk-Zetta\",\n    margin: \"0 auto\",\n    fontSize: \"14px\",\n    lineHeight: \"17px\",\n    marginBottom: \"50px\",\n    color: \"white\",\n    alignItems: \"center\",\n    letterSpacing: \"0.02em\",\n    textTransform: \"uppercase\",\n    background: \"linear-gradient(87.79deg, #8794FF 5.12%, #3B50FF 99.11%)\",\n    borderRadius: \"30px\"\n  };\n  const nftDroparea = {\n    width: \"500px\",\n    height: \"50px\",\n    margin: \"0 auto\",\n    textAlign: \"center\",\n    background: \"#F0F1F9\",\n    borderRadius: \"50px\",\n    marginBottom: \"34px\",\n    fontFamily: \"calibri\",\n    padding: \"10px\",\n    overflow: \"hidden\",\n    cursor: \"pointer\"\n  };\n  const nftDropareaDesc = {\n    fontFamily: \"Whyte\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"20px\",\n    lineHeight: \"25px\",\n    textAlign: \"center\",\n    letterSpacing: \"0.02em\",\n    textTransform: \"uppercase\",\n    color: \"#313439\",\n    flex: \"none\",\n    paddingTop: \"10%\"\n  };\n  const allowedFormats = {\n    textAlign: \"center\",\n    marginTop: \"10%\"\n  };\n  const format = {\n    padding: \"10px\",\n    width: \"89px\",\n    height: \"35px\",\n    marginRight: \"20px\",\n    background: \"#FFFFFF\",\n    borderRadius: \"50px\",\n    fontFamily: \"Grtsk-Zetta\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"14px\",\n    lineHeight: \"15px\",\n    letterSpacing: \"0.02em\",\n    textTransform: \"uppercase\",\n    color: \"#B2B2C1\"\n  };\n  const nftInfo = {\n    marginLeft: \"28%\"\n  };\n  const nftDesc = {\n    width: \"500px\",\n    height: \"150px\",\n    border: \"none\",\n    paddingLeft: \"20px\",\n    paddingBottom: \"45px\",\n    background: \"#F0F1F9\",\n    borderRadius: \"20px\",\n    marginBottom: \"20PX\",\n    fontFamily: \"Grtsk-Zetta\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"14px\",\n    lineHeight: \"15px\",\n    letterSpacing: \"0.02em\",\n    textTransform: \"uppercase\",\n    color: \"#4A4E52\"\n  };\n  const nftCopies = {\n    border: \"none\",\n    width: \"500px\",\n    height: \"54px\",\n    background: \"#F0F1F9\",\n    borderRadius: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: \"Grtsk-Zetta\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"14px\",\n    lineHeight: \"15px\",\n    letterSpacing: \"0.02em\",\n    textTransform: \"uppercase\",\n    color: \"#4A4E52\"\n  };\n  const nftName = {\n    border: \"none\",\n    width: \"500px\",\n    height: \"54px\",\n    background: \"#F0F1F9\",\n    borderRadius: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: \"Grtsk-Zetta\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"14px\",\n    lineHeight: \"15px\",\n    letterSpacing: \"0.02em\",\n    textTransform: \"uppercase\",\n    color: \"#4A4E52\"\n  };\n  const nftMintpatronage = {\n    border: \"none\",\n    width: \"500px\",\n    paddingLeft: \"20px\",\n    height: \"125px\",\n    background: \"#F0F1F9\",\n    borderRadius: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: \"Grtsk-Zetta\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"14px\",\n    lineHeight: \"15px\",\n    letterSpacing: \"0.02em\",\n    textTransform: \"uppercase\",\n    color: \"#4A4E52\"\n  };\n  const nftPricing = {\n    textAlign: \"center\"\n  };\n  const collections = {\n    marginTop: \"5%\",\n    marginBottom: \"163px\",\n    textAlign: \"center\"\n  };\n  const singleButtonChoose = {\n    border: \"none\",\n    padding: \"21px\",\n    fontFamily: \"Grtsk Zetta\",\n    margin: \"10px\",\n    textTransform: \"uppercase\",\n    fontSize: \"14px\",\n    borderRadius: \"21px\"\n  };\n  const buttonsChoose = {\n    marginTop: \"50px\",\n    marginBottom: \"50px\"\n  };\n\n  const getFromIPFS = async hashToGet => {\n    for await (const file of ipfs.get(hashToGet)) {\n      // console.log(file.path);\n      if (!file.content) continue;\n      const content = new BufferList();\n\n      for await (const chunk of file.content) {\n        content.append(chunk);\n      } // console.log(content);\n\n\n      return content;\n    }\n  };\n\n  const [erc721ContractAddress, setErc721ContractAddress] = React.useState(); //single ERC721\n\n  const [singleErc721IpfsHash, setSingleErc721IpfsHash] = React.useState();\n  const [singleErc721File, setSingleErc721File] = React.useState();\n  const [singleErc721Title, setSingleErc721Title] = React.useState();\n  const [singleErc721Description, setSingleErc721Description] = React.useState();\n  const [singleErc721Royalties, setSingleErc721Royalties] = React.useState();\n  const [singleErc721Collection, setSingleErc721Collection] = React.useState();\n  const [singleErc721TokenId, setSingleErc721TokenId] = React.useState();\n  const [singleSending721, setSingleSending721] = React.useState(); // multiple ERC721\n\n  const [multipleErc721IpfsHash, setMultipleErc721IpfsHash] = React.useState();\n  const [multipleErc721File, setMultipleErc721File] = React.useState();\n  const [multipleErc721Title, setMultipleErc721Title] = React.useState();\n  const [multipleErc721Description, setMultipleErc721Description] = React.useState();\n  const [multipleErc721Royalties, setMultipleErc721Royalties] = React.useState();\n  const [multipleErc721Collection, setMultipleErc721Collection] = React.useState();\n  const [multipleErc721TokenId, setMultipleErc721TokenId] = React.useState();\n  const [multipleErc721NumberCopies, setMultipleErc721NumberCopies] = React.useState();\n  const [multipleSending721, setMultipleSending721] = React.useState(); // const [erc1155IpfsHash, setErc1155IpfsHash] = React.useState();\n  // const [erc1155TokenId, setErc1155TokenId] = React.useState();\n  // const [sending1155, setSending1155] = React.useState();\n  // const [erc1155ContractAddress, setErc1155ContractAddress] = React.useState();\n  // console.log({writeContracts: props.writeContracts})\n\n  const [singleNFT, setIsSingle] = useState(true);\n  const [formData, setFormData] = useState();\n  const [isMint, setIsMint] = useState(false);\n  const [multipleNFT, setIsMultiple] = useState(false);\n\n  const onChangeTypeSingle = () => {\n    setIsSingle(true);\n    setIsMultiple(false);\n  };\n\n  const onChangeTypeMultiple = () => {\n    setIsSingle(false);\n    setIsMultiple(true);\n  }; // on every render\n\n\n  useEffect(() => {\n    console.log(\"on every render\");\n  }); // on first render/mount\n\n  useEffect(() => {\n    console.log(\"on first  render/ mount\");\n  }, []); // on first render +  whenever dependency formData is updated\n\n  useEffect(() => {\n    console.log(\"from use effect \" + singleErc721File);\n    console.log(\"minted use effect\");\n    console.log(\"form\", formData);\n  }, [formData]);\n  useEffect(() => {\n    console.log(\"from use effect \" + singleErc721File);\n    console.log(\"minted use effect\");\n    console.log(\"form\", formData);\n  }, [formData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: buttonsChoose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: singleButtonChoose,\n    onClick: onChangeTypeSingle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, \"Single NFT\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: singleButtonChoose,\n    onClick: onChangeTypeMultiple,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }, \"Multiple NFTs\")), singleNFT ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: createDesc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }, \"Create a single NFT\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"\",\n    type: \"file\",\n    style: nftDroparea,\n    onChange: e => {\n      e.preventDefault();\n      const file = e.target.files[0];\n      setSingleErc721File(e.target.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    value: singleErc721Title,\n    placeholder: \"Title\",\n    type: \"text\",\n    style: nftName,\n    onChange: e => {\n      setSingleErc721Title(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    value: singleErc721Description,\n    placeholder: \"Description\",\n    style: nftDesc,\n    onChange: e => {\n      setSingleErc721Description(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    value: singleErc721Royalties,\n    placeholder: \"Royalties\",\n    type: \"text\",\n    style: nftName,\n    onChange: e => {\n      setSingleErc721Royalties(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 5\n    }\n  }, \"Choose Collection\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: singleErc721Collection,\n    placeholder: \"\",\n    type: \"checkbox\",\n    onChange: e => {\n      setSingleErc721Collection(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }\n  }), \"Rarible\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: buttonMint,\n    loading: singleSending721,\n    size: \"large\",\n    shape: \"round\",\n    type: \"primary\",\n    onClick: async () => {\n      // send to IPFS\n      // get ipfs hash back\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(singleErc721File); // var pr;\n\n      reader.onloadend = async () => {\n        const buffer = Buffer(reader.result);\n        const r = await ipfs.add(JSON.stringify(buffer)); // pr =r.path\n\n        setSingleErc721File(r.path); // const back  = await getFromIPFS(r.path)\n      };\n\n      const formData = {\n        singleErc721File: singleErc721File,\n        singleErc721Title: singleErc721Title,\n        singleErc721Description: singleErc721Description,\n        singleErc721Royalties: singleErc721Royalties,\n        singleErc721Collection: singleErc721Collection\n      };\n      setFormData(formData);\n      const ipfsFinalTokenHash = await ipfs.add(JSON.stringify(formData));\n      console.log(\"ipfstokenhash\" + ipfsFinalTokenHash.path); // console.log(\"formdata\" + formData)\n\n      if (!props.writeContracts) return;\n      setSingleSending721(true);\n      const newTokenId = await generateTokenId(props.writeContracts.ERC721Rarible.address, props.accountAddress);\n      setSingleErc721TokenId(newTokenId);\n      setErc721ContractAddress(props.writeContracts.ERC721Rarible.address); // console.log(\"sending\");\n\n      const form = await createLazyMint(newTokenId, props.provider, props.writeContracts.ERC721Rarible.address, props.accountAddress, singleErc721IpfsHash, 'ERC721');\n      await putLazyMint(form);\n      console.log(form);\n      setSingleSending721(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }\n  }, \"Mint\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: createDesc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }\n  }, \"Create multiple NFTs\"), /*#__PURE__*/React.createElement(Input, {\n    value: multipleErc721File,\n    placeholder: \"\",\n    type: \"file\",\n    style: nftDroparea,\n    onChange: e => {\n      setMultipleErc721File(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    value: multipleErc721Title,\n    placeholder: \"Title\",\n    type: \"text\",\n    style: nftName,\n    onChange: e => {\n      setMultipleErc721Title(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    value: multipleErc721Description,\n    placeholder: \"Description\",\n    style: nftDesc,\n    onChange: e => {\n      setMultipleErc721Description(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    value: multipleErc721Collection,\n    placeholder: \"Choose collection\",\n    type: \"text\",\n    style: nftMintpatronage,\n    onChange: e => {\n      setMultipleErc721Collection(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    value: multipleErc721Royalties,\n    placeholder: \"Royalties\",\n    type: \"text\",\n    style: nftName,\n    onChange: e => {\n      setMultipleErc721Royalties(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    value: multipleErc721NumberCopies,\n    placeholder: \"Number of copies\",\n    type: \"text\",\n    style: nftName,\n    onChange: e => {\n      setMultipleErc721NumberCopies(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: buttonMint,\n    loading: multipleSending721,\n    size: \"large\",\n    shape: \"round\",\n    type: \"primary\",\n    onClick: async () => {\n      if (!props.writeContracts) return;\n      setMultipleSending721(true);\n      const newTokenId = await generateTokenId(props.writeContracts.ERC721Rarible.address, props.accountAddress);\n      setMultipleErc721TokenId(newTokenId);\n      setErc721ContractAddress(props.writeContracts.ERC721Rarible.address);\n      const form = await createLazyMint(newTokenId, props.provider, props.writeContracts.ERC721Rarible.address, props.accountAddress, multipleErc721IpfsHash, 'ERC721');\n      await putLazyMint(form);\n      setMultipleSending721(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 9\n    }\n  }, \"Mint\")));\n}","map":{"version":3,"sources":["/Users/velkoskis/Desktop/Claims/src/components/LazyMint.jsx"],"names":["React","useEffect","useState","Button","Input","Card","Divider","AddressInput","BufferList","createLazyMint","generateTokenId","putLazyMint","is","ipfsAPI","require","ipfs","host","port","protocol","LazyMint","props","titleMint","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","letterSpacing","textTransform","color","marginBottom","textAlign","active","backgroundColor","createDesc","buttonMint","width","height","marginTop","margin","alignItems","background","borderRadius","nftDroparea","padding","overflow","cursor","nftDropareaDesc","flex","paddingTop","allowedFormats","format","marginRight","nftInfo","marginLeft","nftDesc","border","paddingLeft","paddingBottom","nftCopies","nftName","nftMintpatronage","nftPricing","collections","singleButtonChoose","buttonsChoose","getFromIPFS","hashToGet","file","get","content","chunk","append","erc721ContractAddress","setErc721ContractAddress","singleErc721IpfsHash","setSingleErc721IpfsHash","singleErc721File","setSingleErc721File","singleErc721Title","setSingleErc721Title","singleErc721Description","setSingleErc721Description","singleErc721Royalties","setSingleErc721Royalties","singleErc721Collection","setSingleErc721Collection","singleErc721TokenId","setSingleErc721TokenId","singleSending721","setSingleSending721","multipleErc721IpfsHash","setMultipleErc721IpfsHash","multipleErc721File","setMultipleErc721File","multipleErc721Title","setMultipleErc721Title","multipleErc721Description","setMultipleErc721Description","multipleErc721Royalties","setMultipleErc721Royalties","multipleErc721Collection","setMultipleErc721Collection","multipleErc721TokenId","setMultipleErc721TokenId","multipleErc721NumberCopies","setMultipleErc721NumberCopies","multipleSending721","setMultipleSending721","singleNFT","setIsSingle","formData","setFormData","isMint","setIsMint","multipleNFT","setIsMultiple","onChangeTypeSingle","onChangeTypeMultiple","console","log","e","preventDefault","target","files","value","reader","window","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","r","add","JSON","stringify","path","ipfsFinalTokenHash","writeContracts","newTokenId","ERC721Rarible","address","accountAddress","form","provider"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Input, Card, Divider } from \"antd\";\nimport {AddressInput} from './'\nimport { BufferList } from \"bl\";\n    import { createLazyMint, generateTokenId, putLazyMint } from \"../rarible/createLazyMint\";\nimport { is } from \"@babel/types\";\n\nconst ipfsAPI = require('ipfs-http-client');\nconst ipfs = ipfsAPI({host: 'ipfs.infura.io', port: '5001', protocol: 'https' });\n\nexport default function LazyMint(props) {\n\n  const titleMint = {\n      fontFamily: \"Whyte-Inktrap\",\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fontSize: \"35px\",\n      lineHeight: \"100%\",   \n      letterSpacing: \"-0.02em\",\n      textTransform: \"uppercase\",\n      color: \"#313439\",\n      marginBottom: \"25px\",\n      textAlign: \"center\"\n  }\n\n  const active = {\n    backgroundColor:\"rgba(73, 70, 230, 1)\",\n    color: \"white!important\"\n\n  }\n\n  const createDesc = {\n    fontSize: \"20px\",\n    textTransform: \"uppercase\",\n    fontWeight: \"600\",\n    marginBottom: \"20px\"\n\n  }\n\n  const buttonMint = {\n      width: \"429px\",\n      height: \"110px\",\n      textAlign: \"center\",\n      marginTop: \"20px\",\n      fontFamily: \"Grtsk-Zetta\",\n      margin: \"0 auto\",\n      fontSize: \"14px\",\n      lineHeight: \"17px\",\n      marginBottom: \"50px\",\n      color: \"white\",\n      alignItems: \"center\",\n      letterSpacing: \"0.02em\",\n      textTransform: \"uppercase\",\n      background: \"linear-gradient(87.79deg, #8794FF 5.12%, #3B50FF 99.11%)\",\n      borderRadius: \"30px\"\n  }\n      \n  const nftDroparea = {\n      width: \"500px\",\n      height: \"50px\",\n      margin: \"0 auto\",\n      textAlign: \"center\",\n      background: \"#F0F1F9\",\n      borderRadius: \"50px\",\n      marginBottom: \"34px\",\n      fontFamily: \"calibri\",\n      padding: \"10px\",\n      overflow: \"hidden\",\n      cursor: \"pointer\"\n  }\n\n  const nftDropareaDesc = {\n      fontFamily: \"Whyte\",\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fontSize: \"20px\",\n      lineHeight: \"25px\",\n      textAlign: \"center\",\n      letterSpacing: \"0.02em\",\n      textTransform: \"uppercase\",\n      color: \"#313439\",\n      flex: \"none\",\n      paddingTop: \"10%\"\n  }\n  const allowedFormats = {\n      textAlign: \"center\",\n      marginTop: \"10%\"\n  }\n  const format = {\n      padding: \"10px\",\n      width: \"89px\",\n      height: \"35px\",\n      marginRight: \"20px\",\n      background: \"#FFFFFF\",\n      borderRadius: \"50px\",\n      fontFamily: \"Grtsk-Zetta\",\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fontSize: \"14px\",\n      lineHeight: \"15px\",\n      letterSpacing: \"0.02em\",\n      textTransform: \"uppercase\",\n      color: \"#B2B2C1\"\n  }\n\n  const nftInfo = {\n      marginLeft: \"28%\"\n  }\n  const nftDesc = {\n      width: \"500px\",\n      height: \"150px\",\n      border: \"none\",\n      paddingLeft: \"20px\",\n      paddingBottom: \"45px\",\n      background: \"#F0F1F9\",\n      borderRadius: \"20px\",\n      marginBottom: \"20PX\",\n      fontFamily: \"Grtsk-Zetta\",\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fontSize: \"14px\",\n      lineHeight: \"15px\",\n      letterSpacing: \"0.02em\",\n      textTransform: \"uppercase\",\n      color: \"#4A4E52\"\n  }\n  const nftCopies = {\n    border: \"none\",\n    width: \"500px\",\n    height: \"54px\",\n    background: \"#F0F1F9\",\n    borderRadius: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: \"Grtsk-Zetta\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"14px\",\n    lineHeight: \"15px\",\n    letterSpacing: \"0.02em\",\n    textTransform: \"uppercase\",\n    color: \"#4A4E52\"\n  }\n\n  const nftName = {    \n    border: \"none\",\n    width: \"500px\",\n    height: \"54px\",\n    background: \"#F0F1F9\",\n    borderRadius: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: \"Grtsk-Zetta\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"14px\",\n    lineHeight: \"15px\",\n    letterSpacing: \"0.02em\",\n    textTransform: \"uppercase\",\n    color: \"#4A4E52\"\n  }\n\n  const nftMintpatronage = {\n      border: \"none\",\n      width: \"500px\",\n      paddingLeft: \"20px\",\n      height: \"125px\",\n      background: \"#F0F1F9\",\n      borderRadius: \"20px\",\n      marginBottom: \"20px\",\n      fontFamily: \"Grtsk-Zetta\",\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fontSize: \"14px\",\n      lineHeight: \"15px\",\n      letterSpacing: \"0.02em\",\n      textTransform: \"uppercase\",\n      color: \"#4A4E52\"\n  }\n\n  const nftPricing = {\n      textAlign: \"center\"\n  }\n  const collections = {\n      marginTop: \"5%\",\n      marginBottom: \"163px\",\n      textAlign: \"center\"\n  }\n  const singleButtonChoose = {\n    border: \"none\",\n    padding: \"21px\",\n    fontFamily: \"Grtsk Zetta\",\n    margin: \"10px\",\n    textTransform: \"uppercase\",\n    fontSize: \"14px\",\n    borderRadius: \"21px\"\n  }\n  const buttonsChoose = {\n    marginTop: \"50px\",\n    marginBottom:\"50px\"\n  }\n\n\n\n  const getFromIPFS = async hashToGet => {\n    for await (const file of ipfs.get(hashToGet)) {\n\n      // console.log(file.path);\n\n      if (!file.content) continue;\n      const content = new BufferList();\n      for await (const chunk of file.content) {\n        content.append(chunk);\n      }\n      // console.log(content);\n      return content;\n    }\n  };\n  \n\n  const [erc721ContractAddress, setErc721ContractAddress] = React.useState();\n\n\n  //single ERC721\n\n  const [singleErc721IpfsHash, setSingleErc721IpfsHash] = React.useState();\n  const [singleErc721File, setSingleErc721File] = React.useState();\n  const [singleErc721Title, setSingleErc721Title] = React.useState();\n  const [singleErc721Description, setSingleErc721Description] = React.useState();\n  const [singleErc721Royalties, setSingleErc721Royalties] = React.useState();\n  const [singleErc721Collection, setSingleErc721Collection] = React.useState();\n  const [singleErc721TokenId, setSingleErc721TokenId] = React.useState();\n  const [singleSending721, setSingleSending721] = React.useState();\n\n  // multiple ERC721\n\n  const [multipleErc721IpfsHash, setMultipleErc721IpfsHash] = React.useState();\n  const [multipleErc721File, setMultipleErc721File] = React.useState();\n  const [multipleErc721Title, setMultipleErc721Title] = React.useState();\n  const [multipleErc721Description, setMultipleErc721Description] = React.useState();\n  const [multipleErc721Royalties, setMultipleErc721Royalties] = React.useState();\n  const [multipleErc721Collection, setMultipleErc721Collection] = React.useState();\n  const [multipleErc721TokenId, setMultipleErc721TokenId] = React.useState();\n  const [multipleErc721NumberCopies, setMultipleErc721NumberCopies] = React.useState();\n\n  const [multipleSending721, setMultipleSending721] = React.useState();\n\n\n\n  \n  // const [erc1155IpfsHash, setErc1155IpfsHash] = React.useState();\n  // const [erc1155TokenId, setErc1155TokenId] = React.useState();\n  // const [sending1155, setSending1155] = React.useState();\n  // const [erc1155ContractAddress, setErc1155ContractAddress] = React.useState();\n\n\n\n\n\n  // console.log({writeContracts: props.writeContracts})\n\n\n  const [singleNFT, setIsSingle] = useState(true)\n  const [formData, setFormData] = useState()\n  const [isMint, setIsMint] = useState(false)\n  const [multipleNFT, setIsMultiple] = useState(false)\n\n  const onChangeTypeSingle = () => {\n        setIsSingle(true)\n        setIsMultiple(false)\n      \n  };\n\n  const onChangeTypeMultiple = () => {\n      setIsSingle(false)\n      setIsMultiple(true)\n  };\n\n  // on every render\n  useEffect(()=>{\n      console.log(\"on every render\")\n  })\n\n  // on first render/mount\n  useEffect(()=>{\n\n    console.log(\"on first  render/ mount\")\n\n  },[])\n\n  // on first render +  whenever dependency formData is updated\n  useEffect(()=>{\n\n      console.log(\"from use effect \" + singleErc721File)\n\n      console.log(\"minted use effect\")\n      console.log(\"form\",formData)\n\n  },[ formData])\n\n\n   \n  useEffect(()=>{\n\n    console.log(\"from use effect \" + singleErc721File)\n\n    console.log(\"minted use effect\")\n    console.log(\"form\",formData)\n    \n},[ formData])\n\n\n  return (\n    <div>\n      <div style={buttonsChoose}>\n          <button  style={singleButtonChoose} onClick={onChangeTypeSingle}>\n               Single NFT\n          </button>\n          <button style={singleButtonChoose} onClick={onChangeTypeMultiple}>\n             Multiple NFTs\n          </button>\n        </div>\n\n    { singleNFT ? \n    <div>\n      <div style={createDesc}>\n        Create a single NFT\n      </div>\n        <Input\n          placeholder=\"\"\n          type=\"file\"\n          style={nftDroparea}\n           onChange={ e => {\n             e.preventDefault();\n\n            const file = e.target.files[0]\n\n            setSingleErc721File(e.target.files[0])\n\n\n          }}\n        />\n        <Input\n          value={singleErc721Title}\n          placeholder=\"Title\"\n          type=\"text\"\n          style={nftName}\n          onChange={e => {\n            setSingleErc721Title(e.target.value);\n          }}\n        />\n        <Input\n          value={singleErc721Description}\n          placeholder=\"Description\"\n          style={nftDesc}\n          onChange={e => {\n            setSingleErc721Description(e.target.value);\n          }}\n        />\n        <Input\n          value={singleErc721Royalties}\n          placeholder=\"Royalties\"\n          type=\"text\"\n          style={nftName}\n          onChange={e => {\n            setSingleErc721Royalties(e.target.value);\n          }}\n        />\n  <br/>\n    <div>Choose Collection</div>\n      <label>\n        <Input\n          value={singleErc721Collection}\n          placeholder=\"\"\n          type=\"checkbox\"\n          onChange={e => {\n            setSingleErc721Collection(e.target.value);\n          }}\n        />\n       Rarible\n        </label>\n\n\n          <br/>\n        <Button\n          style={buttonMint}\n          loading={singleSending721}\n          size=\"large\"\n          shape=\"round\"\n          type=\"primary\"\n          onClick={async () => {\n            // send to IPFS\n\n            // get ipfs hash back\n\n            const reader = new window.FileReader()\n\n\n            reader.readAsArrayBuffer(singleErc721File)\n            // var pr;\n\n            reader.onloadend = async () => {\n\n              const buffer = Buffer(reader.result)\n              \n              const r = await ipfs.add(JSON.stringify(buffer))\n              // pr =r.path\n              setSingleErc721File(r.path)\n\n              // const back  = await getFromIPFS(r.path)\n\n            }\n\n\n             const formData = {\n              singleErc721File:  singleErc721File,\n              singleErc721Title: singleErc721Title,\n              singleErc721Description: singleErc721Description,\n              singleErc721Royalties: singleErc721Royalties,\n              singleErc721Collection: singleErc721Collection\n            }\n\n            setFormData(formData)\n            const ipfsFinalTokenHash = await ipfs.add(JSON.stringify(formData))\n            console.log( \"ipfstokenhash\" +  ipfsFinalTokenHash.path)\n\n\n            // console.log(\"formdata\" + formData)\n\n\n            if (!props.writeContracts) return\n            setSingleSending721(true);\n            const newTokenId = await generateTokenId(props.writeContracts.ERC721Rarible.address, props.accountAddress)\n            setSingleErc721TokenId(newTokenId)\n            setErc721ContractAddress(props.writeContracts.ERC721Rarible.address)\n            // console.log(\"sending\");\n            const form = await createLazyMint(newTokenId, props.provider, props.writeContracts.ERC721Rarible.address, props.accountAddress, singleErc721IpfsHash, 'ERC721')\n            await putLazyMint(form)\n\n            console.log(form) \n            setSingleSending721(false);\n          }}\n        >\n          Mint\n        </Button>\n\n          {/* <Card title={\n              <div>\n                <span style={{ fontSize: 16, marginRight: 8 }}>Token ID: {erc721TokenId}</span>\n              </div>\n            } X>\n            <div>\n              <p>Contract: {erc721ContractAddress}</p>\n            </div>\n          </Card> */}\n\n\n          <div>\n\n          </div>\n\n    </div>\n    :\n    <div>\n      <div style={createDesc}>\n        Create multiple NFTs\n      </div>\n      <Input\n        value={multipleErc721File}\n        placeholder=\"\"\n        type=\"file\"\n        style={nftDroparea}\n        onChange={e => {\n          setMultipleErc721File(e.target.value);\n        }}\n      />\n      <Input\n        value={multipleErc721Title}\n        placeholder=\"Title\"\n        type=\"text\"\n        style={nftName}\n        onChange={e => {\n          setMultipleErc721Title(e.target.value);\n        }}\n      />\n      <Input\n        value={multipleErc721Description}\n        placeholder=\"Description\"\n        style={nftDesc}\n        onChange={e => {\n          setMultipleErc721Description(e.target.value);\n        }}\n      />\n      <Input\n        value={multipleErc721Collection}\n        placeholder=\"Choose collection\"\n        type=\"text\"\n        style={nftMintpatronage}\n        onChange={e => {\n          setMultipleErc721Collection(e.target.value);\n        }}\n      />\n      <Input\n          value={multipleErc721Royalties}\n          placeholder=\"Royalties\"\n          type=\"text\"\n          style={nftName}\n          onChange={e => {\n            setMultipleErc721Royalties(e.target.value);\n          }}\n      />\n      <Input\n          value={multipleErc721NumberCopies}\n          placeholder=\"Number of copies\"\n          type=\"text\"\n          style={nftName}\n          onChange={e => {\n            setMultipleErc721NumberCopies(e.target.value);\n          }}\n      />\n\n\n\n        <br/>\n        <Button\n          style={buttonMint}\n          loading={multipleSending721}\n          size=\"large\"\n          shape=\"round\"\n          type=\"primary\"\n          onClick={async () => {\n            if (!props.writeContracts) return\n            setMultipleSending721(true);\n            const newTokenId = await generateTokenId(props.writeContracts.ERC721Rarible.address, props.accountAddress)\n            setMultipleErc721TokenId(newTokenId)\n            setErc721ContractAddress(props.writeContracts.ERC721Rarible.address)\n            const form = await createLazyMint(newTokenId, props.provider, props.writeContracts.ERC721Rarible.address, props.accountAddress, multipleErc721IpfsHash, 'ERC721')\n            await putLazyMint(form)\n            setMultipleSending721(false);\n          }}\n        >\n          Mint\n        </Button>\n\n        {/* <Card\n\n          title={\n            <div>\n              <span style={{ fontSize: 16, marginRight: 8 }}>Token ID: {singleErc721TokenId}</span>\n            </div>\n            } \n          >\n          <div>\n            <p>Contract: {erc721ContractAddress}</p>\n          </div>\n        </Card> */}\n\n  </div>\n\n  }\n\n  </div>\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}