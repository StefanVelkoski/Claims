{"ast":null,"code":"var _jsxFileName = \"/Users/velkoskis/Desktop/Claims/src/components/Sell.jsx\";\nimport React from \"react\";\nimport { Button, Input, Tooltip } from \"antd\";\nimport { createSellOrder } from \"../rarible/createOrders\";\n\nconst {\n  utils\n} = require(\"ethers\");\n\nexport default function Sell(props) {\n  const [sellState, setSellState] = React.useState();\n  const [sellForEthValue, setSellForEthValue] = React.useState();\n  const buttons = /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"right\",\n    title: \"* 10 ** 18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    type: \"dashed\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: async () => {\n      try {\n        setSellForEthValue(utils.parseEther(sellForEthValue));\n      } catch {\n        console.log(\"enter a value\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"\\u2734\\uFE0F\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setSellState(\"ETH\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Sell for ETH\"), sellState && sellState === \"ETH\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: sellForEthValue,\n    placeholder: \"ETH\",\n    onChange: e => {\n      setSellForEthValue(e.target.value);\n    },\n    suffix: buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => createSellOrder(\"MAKE_ERC721_TAKE_ETH\", props.provider, {\n      accountAddress: props.accountAddress,\n      makeERC721Address: props.ERC721Address,\n      makeERC721TokenId: props.tokenId,\n      ethAmt: sellForEthValue.toString()\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Create Sell Order\")) || sellState === \"YERC\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 34\n    }\n  }, \"YERC\"));\n}","map":{"version":3,"sources":["/Users/velkoskis/Desktop/Claims/src/components/Sell.jsx"],"names":["React","Button","Input","Tooltip","createSellOrder","utils","require","Sell","props","sellState","setSellState","useState","sellForEthValue","setSellForEthValue","buttons","cursor","parseEther","console","log","e","target","value","provider","accountAddress","makeERC721Address","ERC721Address","makeERC721TokenId","tokenId","ethAmt","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,QAAuC,MAAvC;AACA,SAASC,eAAT,QAA+B,yBAA/B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYC,OAAO,CAAC,QAAD,CAAzB;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,KAAK,CAACW,QAAN,EAAlC;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,KAAK,CAACW,QAAN,EAA9C;AACA,QAAMG,OAAO,gBACX,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,OAAnB;AAA2B,IAAA,KAAK,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAFT;AAGE,IAAA,OAAO,EAAE,YAAY;AACnB,UAAI;AACFF,QAAAA,kBAAkB,CAACR,KAAK,CAACW,UAAN,CAAiBJ,eAAjB,CAAD,CAAlB;AACD,OAFD,CAEE,MAAM;AACNK,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAiBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMR,YAAY,CAAC,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGID,SAAS,IAAIA,SAAS,KAAK,KAA3B,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEG,eADT;AAEE,IAAA,WAAW,EAAC,KAFd;AAGE,IAAA,QAAQ,EAAEO,CAAC,IAAI;AACbN,MAAAA,kBAAkB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD,KALH;AAME,IAAA,MAAM,EAAEP,OANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MACPV,eAAe,CAAC,sBAAD,EAAyBI,KAAK,CAACc,QAA/B,EAAyC;AACtDC,MAAAA,cAAc,EAAEf,KAAK,CAACe,cADgC;AAEtDC,MAAAA,iBAAiB,EAAEhB,KAAK,CAACiB,aAF6B;AAGtDC,MAAAA,iBAAiB,EAAElB,KAAK,CAACmB,OAH6B;AAItDC,MAAAA,MAAM,EAAEhB,eAAe,CAACiB,QAAhB;AAJ8C,KAAzC,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBATF,CADD,IAwBEpB,SAAS,KAAK,MAAd,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3B7B,CADF;AA+BD","sourcesContent":["import React from \"react\";\nimport { Button, Input, Tooltip } from \"antd\";\nimport { createSellOrder} from \"../rarible/createOrders\";\nconst { utils } = require(\"ethers\");\n\nexport default function Sell(props) {\n  const [sellState, setSellState] = React.useState();\n  const [sellForEthValue, setSellForEthValue] = React.useState();\n  const buttons = (\n    <Tooltip placement=\"right\" title=\"* 10 ** 18\">\n      <div\n        type=\"dashed\"\n        style={{ cursor: \"pointer\" }}\n        onClick={async () => {\n          try {\n            setSellForEthValue(utils.parseEther(sellForEthValue));\n          } catch {\n            console.log(\"enter a value\");\n          }\n        }}\n      >\n        ✴️\n      </div>\n    </Tooltip>\n  );\n  return (\n    <div>\n      <Button onClick={() => setSellState(\"ETH\")}>Sell for ETH</Button>\n\n      {(sellState && sellState === \"ETH\" && (\n        <div>\n          <Input\n            value={sellForEthValue}\n            placeholder=\"ETH\"\n            onChange={e => {\n              setSellForEthValue(e.target.value);\n            }}\n            suffix={buttons}\n          />\n          <Button\n            onClick={() =>\n              createSellOrder(\"MAKE_ERC721_TAKE_ETH\", props.provider, {\n                accountAddress: props.accountAddress,\n                makeERC721Address: props.ERC721Address,\n                makeERC721TokenId: props.tokenId,\n                ethAmt: sellForEthValue.toString(),\n              })\n            }\n          >\n            Create Sell Order\n          </Button>\n        </div>\n      )) ||\n        (sellState === \"YERC\" && <span>YERC</span>)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}