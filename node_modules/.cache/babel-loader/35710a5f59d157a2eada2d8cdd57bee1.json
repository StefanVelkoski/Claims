{"ast":null,"code":"var _jsxFileName = \"/Users/velkoskis/Desktop/Claims/src/App.jsx\";\nimport { StaticJsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Card, Col, Input, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useUserAddress } from \"eth-hooks\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Address, AddressInput, Claims, Contract, Faucet, Homepage, GasGauge, Header, Footer, Ramp, ThemeSwitch, Sell, Mint, LazyMint, RaribleItemIndexer } from \"./components\";\nimport { DAI_ABI, DAI_ADDRESS, INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport { useBalance, useContractLoader, useContractReader, useEventListener, useExchangePrice, useExternalContractLoader, useGasPrice, useOnBlock, useUserProvider } from \"./hooks\";\nimport { matchSellOrder, prepareMatchingOrder } from \"./rarible/createOrders\";\nimport { RARIBLE_BASE_URL } from \"./constants\";\n\nconst {\n  BufferList\n} = require(\"bl\"); // https://www.npmjs.com/package/ipfs-http-client\n\n\nconst ipfsAPI = require(\"ipfs-http-client\");\n\nconst ipfs = ipfsAPI({\n  host: \"ipfs.infura.io\",\n  port: \"5001\",\n  protocol: \"https\"\n});\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// üì° What chain are your contracts deployed to?\n\nconst targetNetwork = NETWORKS.ropsten; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = true; // EXAMPLE STARTING JSON:\n\nconst STARTING_JSON = {\n  description: \"It's actually a bison?\",\n  external_url: \"https://austingriffith.com/portfolio/paintings/\",\n  // <-- this can link to a page for the specific file too\n  image: \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n  name: \"Buffalo\",\n  attributes: [{\n    trait_type: \"BackgroundColor\",\n    value: \"green\"\n  }, {\n    trait_type: \"Eyes\",\n    value: \"googly\"\n  }]\n}; // helper function to \"Get\" from IPFS\n// you usually go content.toString() after this...\n\nconst getFromIPFS = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    // console.log(file.path);\n    if (!file.content) continue;\n    const content = new BufferList();\n\n    for await (const chunk of file.content) {\n      content.append(chunk);\n    } // console.log(content);\n\n\n    return content;\n  }\n}; // üõ∞ providers\n// if (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\n\n\nconst scaffoldEthProvider = new StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\");\nconst mainnetInfura = new StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID); // ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_I\n// üè† Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = targetNetwork.rpcUrl; // as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new StaticJsonRpcProvider(localProviderUrlFromEnv); // üî≠ block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer;\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\n\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true,\n  // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        infuraId: INFURA_ID\n      }\n    }\n  }\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nfunction App(props) {\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider); // You can warn the user if you would like them to be on a specific network\n\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userProvider && userProvider._network && userProvider._network.chainId; // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userProvider, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address); // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider); // If you want to make üîê write transactions to your contracts, use the userProvider:\n\n  const writeContracts = useContractLoader(userProvider); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI); // If you want to call a function on a new block\n\n  useOnBlock(mainnetProvider, () => {// console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  }); // Then read your DAI balance like:\n\n  const myMainnetDAIBalance = useContractReader({\n    DAI: mainnetDAIContract\n  }, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]); // keep track of a variable from the contract in the local React state:\n\n  const balance = useContractReader(readContracts, \"YourCollectible\", \"balanceOf\", [address]); // console.log(\"ü§ó balance:\", balance);\n  // üìü Listen for broadcast events\n\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, 1); // console.log(\"üìü Transfer events:\", transferEvents);\n  //\n  // üß† This effect will update yourCollectibles by polling when your balance changes\n  //\n\n  const yourBalance = balance && balance.toNumber && balance.toNumber();\n  const [yourCollectibles, setYourCollectibles] = useState();\n  useEffect(() => {\n    const updateYourCollectibles = async () => {\n      const collectibleUpdate = [];\n\n      for (let tokenIndex = 0; tokenIndex < balance; tokenIndex++) {\n        try {\n          console.log(\"GEtting token index\", tokenIndex);\n          const tokenId = await readContracts.YourCollectible.tokenOfOwnerByIndex(address, tokenIndex);\n          console.log(\"tokenId\", tokenId);\n          const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\n          console.log(\"tokenURI\", tokenURI);\n          const ipfsHash = tokenURI.replace(\"https://ipfs.io/ipfs/\", \"\");\n          console.log(\"ipfsHash\", ipfsHash);\n          const jsonManifestBuffer = await getFromIPFS(ipfsHash);\n\n          try {\n            const jsonManifest = JSON.parse(jsonManifestBuffer.toString());\n            console.log(\"jsonManifest\", jsonManifest);\n            collectibleUpdate.push({\n              id: tokenId,\n              uri: tokenURI,\n              owner: address,\n              ...jsonManifest\n            });\n          } catch (e) {\n            console.log(e);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n      setYourCollectibles(collectibleUpdate);\n    };\n\n    updateYourCollectibles();\n  }, [address, yourBalance]);\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n  // useEffect(() => {\n  //   if (\n  //     DEBUG &&\n  //     mainnetProvider &&\n  //     address &&\n  //     selectedChainId &&\n  //     yourLocalBalance &&\n  //     yourMainnetBalance &&\n  //     readContracts &&\n  //     writeContracts &&\n  //     mainnetDAIContract\n  //   ) {\n  //     console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n  //     console.log(\"üåé mainnetProvider\", mainnetProvider);\n  //     console.log(\"üè† localChainId\", localChainId);\n  //     console.log(\"üë©‚Äçüíº selected address:\", address);\n  //     console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n  //     console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\");\n  //     console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? formatEther(yourMainnetBalance) : \"...\");\n  //     console.log(\"üìù readContracts\", readContracts);\n  //     console.log(\"üåç DAI contract on mainnet:\", mainnetDAIContract);\n  //     console.log(\"üîê writeContracts\", writeContracts);\n  //   }\n  // }, [\n  //   mainnetProvider,\n  //   address,\n  //   selectedChainId,\n  //   yourLocalBalance,\n  //   yourMainnetBalance,\n  //   readContracts,\n  //   writeContracts,\n  //   mainnetDAIContract,\n  // ]);\n\n  let networkDisplay = \"\";\n\n  if (localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        message: \"\\u26A0\\uFE0F Wrong Network ID\",\n        description: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }\n        }, \"You have \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 26\n          }\n        }, \"chain id 1337\"), \" for localhost and you need to change it to \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 90\n          }\n        }, \"31337\"), \" to work with HardHat.\", /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }\n        }, \"(MetaMask -> Settings -> Networks -> Chain ID -> 31337)\")),\n        type: \"error\",\n        closable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        message: \"\\u26A0\\uFE0F Wrong Network\",\n        description: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }\n        }, \"You have \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 26\n          }\n        }, networkSelected && networkSelected.name), \" selected and you need to be on\", \" \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }\n        }, networkLocal && networkLocal.name), \".\"),\n        type: \"error\",\n        closable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }\n      }));\n    }\n  } else {\n    networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        zIndex: -1,\n        position: \"absolute\",\n        right: 154,\n        top: 28,\n        padding: 16,\n        color: targetNetwork.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }\n    }, targetNetwork.name);\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name == \"localhost\";\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId == 31337 && yourLocalBalance && formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => {\n        faucetTx({\n          to: address,\n          value: parseEther(\"0.01\")\n        });\n        setFaucetClicked(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }\n    }, \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"));\n  }\n\n  const [yourJSON, setYourJSON] = useState(STARTING_JSON);\n  const [sending, setSending] = useState();\n  const [ipfsHash, setIpfsHash] = useState();\n  const [ipfsDownHash, setIpfsDownHash] = useState();\n  const [collectionContract, setCollectionContract] = useState();\n  const [tokenId, setTokenId] = useState();\n  const [downloading, setDownloading] = useState();\n  const [ipfsContent, setIpfsContent] = useState();\n  const [sellOrderContent, setSellOrderContent] = useState();\n  const [transferToAddresses, setTransferToAddresses] = useState({});\n  const [approveAddresses, setApproveAddresses] = useState({});\n  const appBody = {\n    paddingTop: \"6%\",\n    minHeight: \"100vh\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    style: appBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 5\n    }\n  }, networkDisplay, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/homepage\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Homepage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Homepage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/menu\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    style: {\n      textAlign: \"center\"\n    },\n    selectedKeys: [route],\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/mint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/mint\");\n    },\n    to: \"/mint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }\n  }, \"Mint\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/raribleItemIndexer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/raribleItemIndexer\");\n    },\n    to: \"/raribleItemIndexer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }\n  }, \"Rarible Item Indexer\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/rarible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/rarible\");\n    },\n    to: \"/rarible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  }, \"Rarible Order Indexer\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/transfers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/transfers\");\n    },\n    to: \"/transfers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }\n  }, \"Transfers\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/ipfsup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/ipfsup\");\n    },\n    to: \"/ipfsup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 13\n    }\n  }, \"IPFS Upload\")))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 640,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: yourCollectibles,\n    renderItem: item => {\n      const id = item.id.toNumber();\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: id + \"_\" + item.uri + \"_\" + item.owner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontSize: 16,\n            marginRight: 8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 29\n          }\n        }, \"#\", id), \" \", item.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: item.image,\n        style: {\n          maxWidth: 150\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 25\n        }\n      }, item.description)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 23\n        }\n      }, \"owner:\", \" \", /*#__PURE__*/React.createElement(Address, {\n        address: item.owner,\n        ensProvider: mainnetProvider,\n        blockExplorer: blockExplorer,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(AddressInput, {\n        ensProvider: mainnetProvider,\n        placeholder: \"transfer to address\",\n        value: transferToAddresses[id],\n        onChange: newValue => {\n          const update = {};\n          update[id] = newValue;\n          setTransferToAddresses({ ...transferToAddresses,\n            ...update\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          // console.log(\"writeContracts\", writeContracts);\n          tx(writeContracts.YourCollectible.transferFrom(address, transferToAddresses[id], id));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 25\n        }\n      }, \"Transfer\"), /*#__PURE__*/React.createElement(AddressInput, {\n        ensProvider: mainnetProvider,\n        placeholder: \"approve address\",\n        value: approveAddresses[id],\n        onChange: newValue => {\n          const update = {};\n          update[id] = newValue;\n          setApproveAddresses({ ...approveAddresses,\n            ...update\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          // console.log(\"writeContracts\", writeContracts);\n          tx(writeContracts.YourCollectible.approve(approveAddresses[id], id));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 25\n        }\n      }, \"Approve\"), /*#__PURE__*/React.createElement(Sell, {\n        provider: userProvider,\n        accountAddress: address,\n        ERC721Address: writeContracts.YourCollectible.address,\n        tokenId: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 25\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/mint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 32,\n      width: 740,\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Mint, {\n    ensProvider: mainnetProvider,\n    provider: userProvider,\n    writeContracts: writeContracts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/lazyMint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 32,\n      width: 740,\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LazyMint, {\n    ensProvider: mainnetProvider,\n    provider: userProvider // contractAddress={writeContracts.ERC721Rarible.address}\n    // contractAddress={writeContracts.YourCollectible.address}\n    ,\n    writeContracts: writeContracts,\n    accountAddress: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/claims\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"1300px\",\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Claims, {\n    ensProvider: mainnetProvider,\n    provider: userProvider // contractAddress={writeContracts.ERC721Rarible.address}\n    // contractAddress={writeContracts.YourCollectible.address}\n    ,\n    writeContracts: writeContracts,\n    accountAddress: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/raribleItemIndexer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 32,\n      width: 740,\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RaribleItemIndexer, {\n    ensProvider: mainnetProvider,\n    tx: tx,\n    provider: userProvider,\n    writeContracts: writeContracts,\n    accountAddress: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/rarible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 32,\n      width: 740,\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddressInput, {\n    ensProvider: mainnetProvider,\n    placeholder: \"NFT collection address\",\n    value: collectionContract,\n    onChange: newValue => {\n      setCollectionContract(newValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    value: tokenId,\n    placeholder: \"tokenId\",\n    onChange: e => {\n      setTokenId(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 8\n    },\n    loading: sending,\n    size: \"large\",\n    shape: \"round\",\n    type: \"primary\",\n    onClick: async () => {\n      setDownloading(true);\n      let sellOrderResult;\n\n      if (tokenId) {\n        const getSellOrdersByItemUrl = `${RARIBLE_BASE_URL}order/orders/sell/byItem?contract=${collectionContract}&tokenId=${tokenId}&sort=LAST_UPDATE`;\n        sellOrderResult = await fetch(getSellOrdersByItemUrl);\n      } else {\n        const getSellOrderByCollectionUrl = `${RARIBLE_BASE_URL}order/orders/sell/byCollection?collection=${collectionContract}&sort=LAST_UPDATE`;\n        sellOrderResult = await fetch(getSellOrderByCollectionUrl);\n      }\n\n      const resultJson = await sellOrderResult.json();\n\n      if (resultJson && resultJson.orders) {\n        setSellOrderContent(resultJson.orders);\n      }\n\n      setDownloading(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 13\n    }\n  }, \"Get Sell Orders\"), /*#__PURE__*/React.createElement(\"pre\", {\n    style: {\n      padding: 16,\n      width: 500,\n      margin: \"auto\",\n      paddingBottom: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 13\n    }\n  }, JSON.stringify(sellOrderContent)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 640,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: sellOrderContent,\n    renderItem: item => {\n      const id = item.hash;\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontSize: 16,\n            marginRight: 8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 29\n          }\n        }, item.type)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 27\n        }\n      }, \"maker: \", item.maker), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 27\n        }\n      }, \"selling:\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 27\n        }\n      }, \"collection: \", item.make.assetType.contract), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 27\n        }\n      }, \"tokenId: \", item.make.assetType.tokenId), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 27\n        }\n      }, \"price: \", formatEther(item.take.value), item.take.assetType.assetClass), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 27\n        }\n      }, \"createAt: \", item.createdAt))), /*#__PURE__*/React.createElement(Button, {\n        onClick: async () => {\n          const preparedTransaction = await prepareMatchingOrder(item, address); // console.log({preparedTransaction})\n\n          const value = preparedTransaction.asset.value;\n          const valueBN = BigNumber.from(value);\n          const safeValue = valueBN.add(100); // console.log({safeValue})\n\n          const signer = userProvider.getSigner();\n          tx(signer.sendTransaction({\n            to: preparedTransaction.transaction.to,\n            from: address,\n            data: preparedTransaction.transaction.data,\n            value: safeValue\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 23\n        }\n      }, \"Fill order\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/transfers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 600,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: transferEvents,\n    renderItem: item => {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: item[0] + \"_\" + item[1] + \"_\" + item.blockNumber + \"_\" + item[2].toNumber(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 16,\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 23\n        }\n      }, \"#\", item[2].toNumber()), /*#__PURE__*/React.createElement(Address, {\n        address: item[0],\n        ensProvider: mainnetProvider,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 23\n        }\n      }), \" =>\", /*#__PURE__*/React.createElement(Address, {\n        address: item[1],\n        ensProvider: mainnetProvider,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 23\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/ipfsup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 32,\n      width: 740,\n      margin: \"auto\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactJson, {\n    style: {\n      padding: 8\n    },\n    src: yourJSON,\n    theme: \"pop\",\n    enableClipboard: false,\n    onEdit: (edit, a) => {\n      setYourJSON(edit.updated_src);\n    },\n    onAdd: (add, a) => {\n      setYourJSON(add.updated_src);\n    },\n    onDelete: (del, a) => {\n      setYourJSON(del.updated_src);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 8\n    },\n    loading: sending,\n    size: \"large\",\n    shape: \"round\",\n    type: \"primary\",\n    onClick: async () => {\n      // console.log(\"UPLOADING...\", yourJSON);\n      setSending(true);\n      setIpfsHash();\n      const result = await ipfs.add(JSON.stringify(yourJSON)); // addToIPFS(JSON.stringify(yourJSON))\n\n      if (result && result.path) {\n        setIpfsHash(result.path);\n      }\n\n      setSending(false); // console.log(\"RESULT:\", result);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 13\n    }\n  }, \"Upload to IPFS\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 16,\n      paddingBottom: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 13\n    }\n  }, ipfsHash))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ThemeSwitch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"right\",\n      right: 0,\n      top: 0,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    address: address,\n    localProvider: localProvider,\n    userProvider: userProvider,\n    mainnetProvider: mainnetProvider,\n    price: price,\n    web3Modal: web3Modal,\n    loadWeb3Modal: loadWeb3Modal,\n    logoutOfWeb3Modal: logoutOfWeb3Modal,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 9\n    }\n  }), faucetHint));\n}\n/* eslint-disable */\n\n\nwindow.ethereum && window.ethereum.on(\"chainChanged\", chainId => {\n  web3Modal.cachedProvider && setTimeout(() => {\n    window.location.reload();\n  }, 1);\n});\nwindow.ethereum && window.ethereum.on(\"accountsChanged\", accounts => {\n  web3Modal.cachedProvider && setTimeout(() => {\n    window.location.reload();\n  }, 1);\n});\n/* eslint-enable */\n\nexport default App;","map":{"version":3,"sources":["/Users/velkoskis/Desktop/Claims/src/App.jsx"],"names":["StaticJsonRpcProvider","Web3Provider","formatEther","parseEther","BigNumber","WalletConnectProvider","Alert","Button","Card","Col","Input","List","Menu","Row","useUserAddress","React","useCallback","useEffect","useState","ReactJson","BrowserRouter","Link","Route","Switch","Web3Modal","Account","Address","AddressInput","Claims","Contract","Faucet","Homepage","GasGauge","Header","Footer","Ramp","ThemeSwitch","Sell","Mint","LazyMint","RaribleItemIndexer","DAI_ABI","DAI_ADDRESS","INFURA_ID","NETWORK","NETWORKS","Transactor","useBalance","useContractLoader","useContractReader","useEventListener","useExchangePrice","useExternalContractLoader","useGasPrice","useOnBlock","useUserProvider","matchSellOrder","prepareMatchingOrder","RARIBLE_BASE_URL","BufferList","require","ipfsAPI","ipfs","host","port","protocol","targetNetwork","ropsten","DEBUG","STARTING_JSON","description","external_url","image","name","attributes","trait_type","value","getFromIPFS","hashToGet","file","get","content","chunk","append","scaffoldEthProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","console","log","localProvider","blockExplorer","web3Modal","cacheProvider","providerOptions","walletconnect","package","options","infuraId","logoutOfWeb3Modal","clearCachedProvider","setTimeout","window","location","reload","App","props","mainnetProvider","_network","injectedProvider","setInjectedProvider","price","gasPrice","userProvider","address","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","readContracts","writeContracts","mainnetDAIContract","myMainnetDAIBalance","DAI","balance","transferEvents","yourBalance","toNumber","yourCollectibles","setYourCollectibles","updateYourCollectibles","collectibleUpdate","tokenIndex","tokenId","YourCollectible","tokenOfOwnerByIndex","tokenURI","ipfsHash","replace","jsonManifestBuffer","jsonManifest","JSON","parse","toString","push","id","uri","owner","e","networkDisplay","networkSelected","networkLocal","zIndex","position","right","top","padding","color","loadWeb3Modal","provider","connect","cachedProvider","route","setRoute","pathname","faucetHint","faucetAvailable","connection","faucetClicked","setFaucetClicked","to","yourJSON","setYourJSON","sending","setSending","setIpfsHash","ipfsDownHash","setIpfsDownHash","collectionContract","setCollectionContract","setTokenId","downloading","setDownloading","ipfsContent","setIpfsContent","sellOrderContent","setSellOrderContent","transferToAddresses","setTransferToAddresses","approveAddresses","setApproveAddresses","appBody","paddingTop","minHeight","textAlign","width","margin","marginTop","paddingBottom","item","fontSize","marginRight","maxWidth","newValue","update","transferFrom","approve","target","sellOrderResult","getSellOrdersByItemUrl","fetch","getSellOrderByCollectionUrl","resultJson","json","orders","stringify","hash","type","maker","make","assetType","contract","take","assetClass","createdAt","preparedTransaction","asset","valueBN","from","safeValue","add","signer","getSigner","sendTransaction","transaction","data","blockNumber","edit","a","updated_src","del","result","path","ethereum","on","accounts"],"mappings":"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","sourcesContent":["import { StaticJsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Card, Col, Input, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useUserAddress } from \"eth-hooks\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport {\n  Account,\n  Address,\n  AddressInput,\n  Claims,\n  Contract,\n  Faucet,\n  Homepage,\n  GasGauge,\n  Header,\n  Footer,\n  Ramp,\n  ThemeSwitch,\n  Sell,\n  Mint,\n  LazyMint,\n  RaribleItemIndexer,\n} from \"./components\";\nimport { DAI_ABI, DAI_ADDRESS, INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useEventListener,\n  useExchangePrice,\n  useExternalContractLoader,\n  useGasPrice,\n  useOnBlock,\n  useUserProvider,\n} from \"./hooks\";\nimport { matchSellOrder, prepareMatchingOrder } from \"./rarible/createOrders\";\nimport { RARIBLE_BASE_URL } from \"./constants\";\n\nconst { BufferList } = require(\"bl\");\n// https://www.npmjs.com/package/ipfs-http-client\nconst ipfsAPI = require(\"ipfs-http-client\");\n\nconst ipfs = ipfsAPI({ host: \"ipfs.infura.io\", port: \"5001\", protocol: \"https\" });\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// üì° What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS.ropsten; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true;\n\n// EXAMPLE STARTING JSON:\nconst STARTING_JSON = {\n  description: \"It's actually a bison?\",\n  external_url: \"https://austingriffith.com/portfolio/paintings/\", // <-- this can link to a page for the specific file too\n  image: \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n  name: \"Buffalo\",\n  attributes: [\n    {\n      trait_type: \"BackgroundColor\",\n      value: \"green\",\n    },\n    {\n      trait_type: \"Eyes\",\n      value: \"googly\",\n    },\n  ],\n};\n\n// helper function to \"Get\" from IPFS\n// you usually go content.toString() after this...\nconst getFromIPFS = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    // console.log(file.path);\n    if (!file.content) continue;\n    const content = new BufferList();\n    for await (const chunk of file.content) {\n      content.append(chunk);\n    }\n    // console.log(content);\n    return content;\n  }\n};\n\n// üõ∞ providers\n// if (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nconst scaffoldEthProvider = new StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\");\nconst mainnetInfura = new StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID);\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_I\n\n// üè† Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// üî≠ block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nfunction App(props) {\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userProvider && userProvider._network && userProvider._network.chainId;\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userProvider, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider);\n\n  // If you want to make üîê write transactions to your contracts, use the userProvider:\n  const writeContracts = useContractLoader(userProvider);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    // console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader({ DAI: mainnetDAIContract }, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  // keep track of a variable from the contract in the local React state:\n  const balance = useContractReader(readContracts, \"YourCollectible\", \"balanceOf\", [address]);\n  // console.log(\"ü§ó balance:\", balance);\n  // üìü Listen for broadcast events\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, 1);\n  // console.log(\"üìü Transfer events:\", transferEvents);\n\n  //\n  // üß† This effect will update yourCollectibles by polling when your balance changes\n  //\n  const yourBalance = balance && balance.toNumber && balance.toNumber();\n  const [yourCollectibles, setYourCollectibles] = useState();\n\n  useEffect(() => {\n    const updateYourCollectibles = async () => {\n      const collectibleUpdate = [];\n      for (let tokenIndex = 0; tokenIndex < balance; tokenIndex++) {\n        try {\n          console.log(\"GEtting token index\", tokenIndex);\n          const tokenId = await readContracts.YourCollectible.tokenOfOwnerByIndex(address, tokenIndex);\n          console.log(\"tokenId\", tokenId);\n          const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\n          console.log(\"tokenURI\", tokenURI);\n\n          const ipfsHash = tokenURI.replace(\"https://ipfs.io/ipfs/\", \"\");\n          console.log(\"ipfsHash\", ipfsHash);\n\n          const jsonManifestBuffer = await getFromIPFS(ipfsHash);\n\n          try {\n            const jsonManifest = JSON.parse(jsonManifestBuffer.toString());\n            console.log(\"jsonManifest\", jsonManifest);\n            collectibleUpdate.push({ id: tokenId, uri: tokenURI, owner: address, ...jsonManifest });\n          } catch (e) {\n            console.log(e);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      setYourCollectibles(collectibleUpdate);\n    };\n    updateYourCollectibles();\n  }, [address, yourBalance]);\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n  // useEffect(() => {\n  //   if (\n  //     DEBUG &&\n  //     mainnetProvider &&\n  //     address &&\n  //     selectedChainId &&\n  //     yourLocalBalance &&\n  //     yourMainnetBalance &&\n  //     readContracts &&\n  //     writeContracts &&\n  //     mainnetDAIContract\n  //   ) {\n  //     console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n  //     console.log(\"üåé mainnetProvider\", mainnetProvider);\n  //     console.log(\"üè† localChainId\", localChainId);\n  //     console.log(\"üë©‚Äçüíº selected address:\", address);\n  //     console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n  //     console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\");\n  //     console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? formatEther(yourMainnetBalance) : \"...\");\n  //     console.log(\"üìù readContracts\", readContracts);\n  //     console.log(\"üåç DAI contract on mainnet:\", mainnetDAIContract);\n  //     console.log(\"üîê writeContracts\", writeContracts);\n  //   }\n  // }, [\n  //   mainnetProvider,\n  //   address,\n  //   selectedChainId,\n  //   yourLocalBalance,\n  //   yourMainnetBalance,\n  //   readContracts,\n  //   writeContracts,\n  //   mainnetDAIContract,\n  // ]);\n\n  let networkDisplay = \"\";\n  if (localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <b>{networkLocal && networkLocal.name}</b>.\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name == \"localhost\";\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId == 31337 &&\n    yourLocalBalance &&\n    formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: parseEther(\"0.01\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    );\n  }\n\n  const [yourJSON, setYourJSON] = useState(STARTING_JSON);\n  const [sending, setSending] = useState();\n  const [ipfsHash, setIpfsHash] = useState();\n  const [ipfsDownHash, setIpfsDownHash] = useState();\n  const [collectionContract, setCollectionContract] = useState();\n  const [tokenId, setTokenId] = useState();\n\n  const [downloading, setDownloading] = useState();\n  const [ipfsContent, setIpfsContent] = useState();\n\n  const [sellOrderContent, setSellOrderContent] = useState();\n\n  const [transferToAddresses, setTransferToAddresses] = useState({});\n  const [approveAddresses, setApproveAddresses] = useState({});\n\n  const appBody = {\n    paddingTop:\"6%\",\n    minHeight: \"100vh\",\n  }\n  return (\n    <div className=\"App\" style={appBody}>\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      {networkDisplay}\n      <BrowserRouter>\n        <Header />\n          <Route path= \"/homepage\" exact>\n            <Homepage/>\n          </Route> \n          <Route path= \"/\" exact>\n            <Homepage/>\n          </Route> \n          <Route path= \"/menu\" exact>\n          <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/mint\">\n            <Link\n              onClick={() => {\n                setRoute(\"/mint\");\n              }}\n              to=\"/mint\"\n            >\n              Mint\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/raribleItemIndexer\">\n            <Link\n              onClick={() => {\n                setRoute(\"/raribleItemIndexer\");\n              }}\n              to=\"/raribleItemIndexer\"\n            >\n              Rarible Item Indexer\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/rarible\">\n            <Link\n              onClick={() => {\n                setRoute(\"/rarible\");\n              }}\n              to=\"/rarible\"\n            >\n              Rarible Order Indexer\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/transfers\">\n            <Link\n              onClick={() => {\n                setRoute(\"/transfers\");\n              }}\n              to=\"/transfers\"\n            >\n              Transfers\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/ipfsup\">\n            <Link\n              onClick={() => {\n                setRoute(\"/ipfsup\");\n              }}\n              to=\"/ipfsup\"\n            >\n              IPFS Upload\n            </Link>\n          </Menu.Item>\n\n        </Menu>\n          </Route>   \n      \n\n        <Switch>\n          <Route exact path=\"/\">\n            {/*\n                üéõ this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n            <div style={{ width: 640, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n              <List\n                bordered\n                dataSource={yourCollectibles}\n                renderItem={item => {\n                  const id = item.id.toNumber();\n                  return (\n                    <List.Item key={id + \"_\" + item.uri + \"_\" + item.owner}>\n                      <Card\n                        title={\n                          <div>\n                            <span style={{ fontSize: 16, marginRight: 8 }}>#{id}</span> {item.name}\n                          </div>\n                        }\n                      >\n                        <div>\n                          <img src={item.image} style={{ maxWidth: 150 }} />\n                        </div>\n                        <div>{item.description}</div>\n                      </Card>\n\n                      <div>\n                        owner:{\" \"}\n                        <Address\n                          address={item.owner}\n                          ensProvider={mainnetProvider}\n                          blockExplorer={blockExplorer}\n                          fontSize={16}\n                        />\n                        <AddressInput\n                          ensProvider={mainnetProvider}\n                          placeholder=\"transfer to address\"\n                          value={transferToAddresses[id]}\n                          onChange={newValue => {\n                            const update = {};\n                            update[id] = newValue;\n                            setTransferToAddresses({ ...transferToAddresses, ...update });\n                          }}\n                        />\n                        <Button\n                          onClick={() => {\n                            // console.log(\"writeContracts\", writeContracts);\n                            tx(writeContracts.YourCollectible.transferFrom(address, transferToAddresses[id], id));\n                          }}\n                        >\n                          Transfer\n                        </Button>\n                        <AddressInput\n                          ensProvider={mainnetProvider}\n                          placeholder=\"approve address\"\n                          value={approveAddresses[id]}\n                          onChange={newValue => {\n                            const update = {};\n                            update[id] = newValue;\n                            setApproveAddresses({ ...approveAddresses, ...update });\n                          }}\n                        />\n                        <Button\n                          onClick={() => {\n                            // console.log(\"writeContracts\", writeContracts);\n                            tx(writeContracts.YourCollectible.approve(approveAddresses[id], id));\n                          }}\n                        >\n                          Approve\n                        </Button>\n                        <Sell\n                          provider={userProvider}\n                          accountAddress={address}\n                          ERC721Address={writeContracts.YourCollectible.address}\n                          tokenId={id}\n                        ></Sell>\n                      </div>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </Route>\n          <Route path=\"/mint\">\n            <div style={{ paddingTop: 32, width: 740, margin: \"auto\" }}>\n                        <Mint\n                      ensProvider={mainnetProvider}\n                          provider={userProvider}\n                          writeContracts={writeContracts}\n                        ></Mint>\n            </div>\n\n          </Route>\n          <Route path=\"/lazyMint\">\n            <div style={{ paddingTop: 32, width: 740, margin: \"auto\" }}>\n                        <LazyMint\n                          ensProvider={mainnetProvider}\n                          provider={userProvider}\n                          // contractAddress={writeContracts.ERC721Rarible.address}\n                          // contractAddress={writeContracts.YourCollectible.address}\n                          writeContracts={writeContracts}\n                          accountAddress={address}\n                        ></LazyMint>\n            </div>\n\n          </Route>\n          <Route path=\"/claims\" exact>\n            <div style={{  width: \"1300px\", margin: \"auto\" }}>\n                        <Claims\n                          ensProvider={mainnetProvider}\n                          provider={userProvider}\n                          // contractAddress={writeContracts.ERC721Rarible.address}\n                          // contractAddress={writeContracts.YourCollectible.address}\n                          writeContracts={writeContracts}\n                          accountAddress={address}\n                ></Claims>\n            </div>\n\n          </Route>\n\n          <Route path=\"/raribleItemIndexer\">\n            <div style={{ paddingTop: 32, width: 740, margin: \"auto\" }}>\n                        <RaribleItemIndexer\n                          ensProvider={mainnetProvider}\n                          tx={tx}\n                          provider={userProvider}\n                          writeContracts={writeContracts}\n                          accountAddress={address}\n                        ></RaribleItemIndexer>\n            </div>\n\n          </Route>\n\n          <Route path=\"/rarible\">\n            <div style={{ paddingTop: 32, width: 740, margin: \"auto\" }}>\n              <AddressInput\n                ensProvider={mainnetProvider}\n                placeholder=\"NFT collection address\"\n                value={collectionContract}\n                onChange={newValue => {\n                  setCollectionContract(newValue);\n                }}\n              />\n              <Input\n                value={tokenId}\n                placeholder=\"tokenId\"\n                onChange={e => {\n                  setTokenId(e.target.value);\n                }}\n              />\n            </div>\n            <Button\n              style={{ margin: 8 }}\n              loading={sending}\n              size=\"large\"\n              shape=\"round\"\n              type=\"primary\"\n              onClick={async () => {\n                setDownloading(true);\n                let sellOrderResult\n                if (tokenId) {\n                const getSellOrdersByItemUrl = `${RARIBLE_BASE_URL}order/orders/sell/byItem?contract=${collectionContract}&tokenId=${tokenId}&sort=LAST_UPDATE`\n                sellOrderResult = await fetch(getSellOrdersByItemUrl);\n                } else {\n                const getSellOrderByCollectionUrl = `${RARIBLE_BASE_URL}order/orders/sell/byCollection?collection=${collectionContract}&sort=LAST_UPDATE`;\n                sellOrderResult = await fetch(getSellOrderByCollectionUrl);\n                }\n                const resultJson = await sellOrderResult.json();\n                if (resultJson && resultJson.orders) {\n                  setSellOrderContent(resultJson.orders);\n                }\n                setDownloading(false);\n              }}\n            >\n              Get Sell Orders\n            </Button>\n\n            <pre style={{ padding: 16, width: 500, margin: \"auto\", paddingBottom: 150 }}>\n              {JSON.stringify(sellOrderContent)}\n            </pre>\n            <div style={{ width: 640, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n              <List\n                bordered\n                dataSource={sellOrderContent}\n                renderItem={item => {\n                  const id = item.hash;\n                  return (\n                    <List.Item key={id}>\n                      <Card\n                        title={\n                          <div>\n                            <span style={{ fontSize: 16, marginRight: 8 }}>{item.type}</span>\n                          </div>\n                        }\n                      >\n                        <div>\n                          <p>maker: {item.maker}</p>\n                          <p>selling:</p>\n                          <p>collection: {item.make.assetType.contract}</p>\n                          <p>tokenId: {item.make.assetType.tokenId}</p>\n                          <p>\n                            price: {formatEther(item.take.value)}\n                            {item.take.assetType.assetClass}\n                          </p>\n                          <p>createAt: {item.createdAt}</p>\n                        </div>\n                      </Card>\n\n                      <Button\n                        onClick={async () =>{\n                          const preparedTransaction = await prepareMatchingOrder(item, address)\n                          // console.log({preparedTransaction})\n                          const value = preparedTransaction.asset.value\n                          const valueBN = BigNumber.from(value)\n                          const safeValue = valueBN.add(100)\n                          // console.log({safeValue})\n                          const signer = userProvider.getSigner()\n                          tx(signer.sendTransaction({to: preparedTransaction.transaction.to, from: address, data: preparedTransaction.transaction.data, value: safeValue}))\n\n                        }\n                        }\n                      >\n                        Fill order\n                      </Button>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </Route>\n\n          <Route path=\"/transfers\">\n            <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n              <List\n                bordered\n                dataSource={transferEvents}\n                renderItem={item => {\n                  return (\n                    <List.Item key={item[0] + \"_\" + item[1] + \"_\" + item.blockNumber + \"_\" + item[2].toNumber()}>\n                      <span style={{ fontSize: 16, marginRight: 8 }}>#{item[2].toNumber()}</span>\n                      <Address address={item[0]} ensProvider={mainnetProvider} fontSize={16} /> =&gt;\n                      <Address address={item[1]} ensProvider={mainnetProvider} fontSize={16} />\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </Route>\n\n          <Route path=\"/ipfsup\">\n            <div style={{ paddingTop: 32, width: 740, margin: \"auto\", textAlign: \"left\" }}>\n              <ReactJson\n                style={{ padding: 8 }}\n                src={yourJSON}\n                theme=\"pop\"\n                enableClipboard={false}\n                onEdit={(edit, a) => {\n                  setYourJSON(edit.updated_src);\n                }}\n                onAdd={(add, a) => {\n                  setYourJSON(add.updated_src);\n                }}\n                onDelete={(del, a) => {\n                  setYourJSON(del.updated_src);\n                }}\n              />\n            </div>\n\n            <Button\n              style={{ margin: 8 }}\n              loading={sending}\n              size=\"large\"\n              shape=\"round\"\n              type=\"primary\"\n              onClick={async () => {\n                // console.log(\"UPLOADING...\", yourJSON);\n                setSending(true);\n                setIpfsHash();\n                const result = await ipfs.add(JSON.stringify(yourJSON)); // addToIPFS(JSON.stringify(yourJSON))\n                if (result && result.path) {\n                  setIpfsHash(result.path);\n                }\n                setSending(false);\n                // console.log(\"RESULT:\", result);\n              }}\n            >\n              Upload to IPFS\n            </Button>\n\n            <div style={{ padding: 16, paddingBottom: 150 }}>{ipfsHash}</div>\n          </Route>\n\n\n        </Switch>\n        <Footer />\n\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userProvider={userProvider}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n        {faucetHint}\n      </div>\n\n    </div>\n  );\n}\n\n/* eslint-disable */\nwindow.ethereum &&\n  window.ethereum.on(\"chainChanged\", chainId => {\n    web3Modal.cachedProvider &&\n      setTimeout(() => {\n        window.location.reload();\n      }, 1);\n  });\n\nwindow.ethereum &&\n  window.ethereum.on(\"accountsChanged\", accounts => {\n    web3Modal.cachedProvider &&\n      setTimeout(() => {\n        window.location.reload();\n      }, 1);\n  });\n/* eslint-enable */\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}